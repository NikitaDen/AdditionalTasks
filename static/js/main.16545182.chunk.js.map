{"version":3,"sources":["images/avatar.jpg","images/loading.svg","components/Message/Message.jsx","components/Message/MessageContainer.jsx","components/Advantages/Advantages.jsx","components/Advantages/AdvantagesContainer.jsx","components/Names/NamesSpan/NamesSpan.jsx","components/Names/NamesButton/NamesButton.jsx","components/Names/NamesInput/NamesInput.jsx","components/Names/NamesItem/NamesItem.jsx","components/Names/Names.jsx","components/Navbar/Navbar.jsx","components/Tasks/TodoListHeader.jsx","components/Tasks/TodoListTasks/TodoListTask/TodoListTask.jsx","components/Tasks/TodoListTasks/TodoListTasks.jsx","components/Tasks/TodoListFooter.jsx","components/Common/Loading.jsx","redux/todo-reducer.js","components/Tasks/TodoList.jsx","App.jsx","serviceWorker.js","redux/user-reducer.js","redux/redux-store.js","index.jsx"],"names":["module","exports","Message","props","className","src","userPhoto","alt","fullName","messageText","messageTime","MessageContainer","connect","state","user","Advantages","advantages","map","item","key","id","advantage","AdvantagesContainer","NamesSpan","number","NamesButton","onClick","addName","NamesInput","useState","text","setText","useEffect","subscribe","cls","onBlur","clsName","setCls","type","value","placeholder","onKeyDown","e","onChange","currentTarget","NamesItem","names","name","Names","setNumber","funcObject","setFuncObject","setNames","validated","setValidated","func","Navbar","to","TodoListHeader","error","title","taskText","React","onAddTaskClick","newTitle","current","setState","addTask","render","ref","onKeyPress","TodoListTask","onIsDoneChanged","changeStatus","task","isDone","dates","created","updated","finished","checked","changePriority","target","priority","deleteTask","TodoListTasks","tasks","TodoListFooter","isHidden","filterValue","onHideFiltersClick","onShowFiltersClick","classForAll","classForCompleted","classForActive","changeFilter","Loading","loading","initialState","todoReducer","action","TodoList","toggleLoading","setTimeout","setLoading","Date","now","toLocaleString","newTasks","filter","newFilterValue","setNewText","this","JSON","parse","localStorage","getItem","prevProps","prevState","snapshot","setItem","stringify","Component","todo","App","path","Boolean","window","location","hostname","match","userReducer","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.16545182.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.196b2cc3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.c63db795.svg\";","import React from \"react\";\r\nimport userPhoto from \"../../images/avatar.jpg\";\r\n\r\nlet Message = (props) => {\r\n    return (\r\n        <div className='message'>\r\n            {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n            <img src={userPhoto} alt=\"photo\" className=\"user-photo\"/>\r\n            <div className=\"message__body\">\r\n                {props.fullName}\r\n                <p>{props.messageText}</p>\r\n                <div className=\"message__time\">{props.messageTime}</div>\r\n            </div>\r\n            <div className=\"triangle\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import Message from \"./Message\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        fullName: state.user.fullName,\r\n        messageText: state.user.messageText,\r\n        messageTime: state.user.messageTime,\r\n    }\r\n};\r\n\r\nconst MessageContainer = connect(stateToProps, null)(Message);\r\n\r\nexport default MessageContainer;","import React from \"react\";\r\n\r\nlet Advantages = (props) => {\r\n    return (\r\n        <div className='advantages'>\r\n            <h3>My Advantages</h3>\r\n            <div className={'list'}>\r\n                {props.advantages.map(item => <p key={item.id} className={item.className}>{item.advantage}</p>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Advantages;","import {connect} from \"react-redux\";\r\nimport Advantages from \"./Advantages\";\r\n\r\nconst stateToProps = (state) => {\r\n    return {\r\n        advantages: state.user.advantages,\r\n    }\r\n};\r\n\r\nconst AdvantagesContainer = connect(stateToProps, null)(Advantages);\r\n\r\nexport default AdvantagesContainer;","import React from \"react\";\r\n\r\nlet NamesSpan = (props) => {\r\n    return (\r\n        <span>{props.number}</span>\r\n    )\r\n};\r\n\r\nexport default NamesSpan;","import React from \"react\";\r\n\r\nlet NamesButton = (props) => {\r\n    return (\r\n        <button onClick={props.addName}>Press</button>\r\n    )\r\n};\r\n\r\nexport default NamesButton;","import React, {useEffect, useState} from \"react\";\r\n\r\nlet NamesInput = (props) => {\r\n\r\n    let [text, setText] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.subscribe(addName);\r\n    }, [text]);\r\n\r\n    const addName = () => {\r\n        if (!text) {\r\n            return null;\r\n        }\r\n        props.addName(text);\r\n        setText('');\r\n    };\r\n\r\n    const handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n           addName();\r\n        }\r\n    };\r\n\r\n    const setClassName = () => {\r\n        let clsName = !text ? 'non-validate' : 'validate';\r\n        props.setCls(clsName);\r\n    };\r\n\r\n    return (\r\n        <input className={props.cls} onBlur={setClassName} type=\"text\" value={text} placeholder={'Input name...'}\r\n               onKeyDown={handleEnter} onChange={(e) => setText(e.currentTarget.value)}/>\r\n    )\r\n};\r\n\r\nexport default NamesInput;","import React from \"react\";\r\n\r\nlet NamesItem = (props) => {\r\n    return (\r\n        <div>\r\n            {props.names.map(item => {\r\n                return (\r\n                    <div key={item.id} className='names__item'>\r\n                        <h4>{item.name}</h4>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NamesItem;","import React, {useState} from \"react\";\r\nimport NamesSpan from \"./NamesSpan/NamesSpan\";\r\nimport NamesButton from \"./NamesButton/NamesButton\";\r\nimport NamesInput from \"./NamesInput/NamesInput\";\r\nimport NamesItem from \"./NamesItem/NamesItem\";\r\n\r\n\r\nlet Names = () => {\r\n    let [number, setNumber] = useState(0);\r\n    let [funcObject, setFuncObject] = useState({addName: () => {}});\r\n    let [names, setNames] = useState([]);\r\n    let [validated, setValidated] = useState(true);\r\n    let [cls, setCls] = useState('validate');\r\n\r\n    const subscribe = (func) => {\r\n        setFuncObject({addName: func});\r\n    };\r\n\r\n    let addName = (text) => {\r\n        setNumber(number + 1);\r\n        setNames([...names, {name: text, id: number}]);\r\n    };\r\n\r\n    return (\r\n        <div className='names'>\r\n            <NamesSpan number={number}/>\r\n            <NamesInput subscribe={subscribe} cls={cls} setCls={setCls} validated={validated} setValidated={setValidated} addName={addName} />\r\n            <NamesButton cls={cls} setCls={setCls} validated={validated} setValidated={setValidated} addName={funcObject.addName}/>\r\n            <NamesItem names={names}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Names;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Navbar = () => {\r\n    return (\r\n        <div className='navbar'>\r\n            <NavLink to={'/monday'}>\r\n                <p>Monday</p>\r\n            </NavLink>\r\n            <NavLink to={'/tuesday'}>\r\n                <p>Tuesday</p>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import * as React from \"react\";\r\n\r\n\r\nclass TodoListHeader extends React.Component {\r\n    state = {\r\n        error: false,\r\n        title: '',\r\n    };\r\n\r\n    taskText = React.createRef();\r\n\r\n    onAddTaskClick = () => {\r\n        let newTitle = this.taskText.current.value;\r\n\r\n        if (!newTitle) {\r\n            this.setState({error: true});\r\n        } else {\r\n            this.taskText.current.value = '';\r\n            this.setState({title: ''});\r\n            this.props.addTask(newTitle);\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"todoList-header\">\r\n                <h3 className=\"todoList-header__title\">What to Learn</h3>\r\n                <div className=\"todoList-newTaskForm\">\r\n                    <input ref={this.taskText}\r\n                           onKeyPress={(e) => {\r\n                               if (e.key === 'Enter') this.onAddTaskClick();\r\n                           }}\r\n                           value={this.state.title}\r\n                           onChange={(e) => {\r\n                               this.setState({title: e.currentTarget.value});\r\n                               this.setState({error: false})\r\n                           }}\r\n                           className={`${this.state.error && 'error'}`}\r\n                           type=\"text\" placeholder=\"New task name\"/>\r\n                    <button className={'button button--todo'} onClick={this.onAddTaskClick}>Add</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListHeader;","import * as React from \"react\";\r\n\r\nclass TodoListTask extends React.Component {\r\n\r\n    onIsDoneChanged = () => {\r\n        this.props.changeStatus(this.props.task, !this.props.isDone);\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div title={`${this.props.dates.created} ${this.props.dates.updated} ${this.props.dates.finished}`} className={this.props.isDone ? \"todoList-task done\" : \"todoList-task\"}>\r\n                <input type=\"checkbox\" onChange={this.onIsDoneChanged} checked={this.props.isDone}/>\r\n\r\n                <span>{this.props.title}</span>\r\n\r\n                <select onChange={(e) => this.props.changePriority(this.props.id, e.target.value)} value={this.props.priority}>\r\n                    <option value=\"high\">high</option>\r\n                    <option value=\"medium\">medium</option>\r\n                    <option value=\"low\">low</option>\r\n                </select>\r\n\r\n                <button className={'button button--delete'} onClick={() => this.props.deleteTask(this.props.id)}>X</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListTask;","import * as React from \"react\";\r\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\r\n\r\n\r\nclass TodoListTasks extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className=\"todoList-tasks\">\r\n                {this.props.tasks.map(task => <TodoListTask key={task.id} dates={task.dates} changePriority={this.props.changePriority} deleteTask={this.props.deleteTask} id={task.id} task={task} changeStatus={this.props.changeStatus} priority={task.priority} title={task.title} isDone={task.isDone}/>)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;","import * as React from \"react\";\r\n\r\n\r\nclass TodoListFooter extends React.Component {\r\n    state = {\r\n        isHidden: false,\r\n        filterValue: 'All'\r\n    };\r\n\r\n    onHideFiltersClick = () => {\r\n        this.setState({isHidden: true})\r\n    };\r\n\r\n    onShowFiltersClick  = () => {\r\n        this.setState({isHidden: false})\r\n    };\r\n\r\n    render = () => {\r\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n        return (\r\n            <div className=\"todoList-footer\">\r\n\r\n                {this.state.isHidden ? <button className={'button button--hide'} onClick={this.onShowFiltersClick}>show</button> :\r\n                    <>\r\n                    <button onClick={() => {this.props.changeFilter(\"All\")}} className={`button button--todo ${classForAll}`}>All</button>\r\n                    <button onClick={() => {this.props.changeFilter(\"Completed\")}} className={`button button--todo ${classForCompleted}`}>Completed</button>\r\n                    <button onClick={() => {this.props.changeFilter(\"Active\")}} className={`button button--todo ${classForActive}`}>Active</button>\r\n                    <button className={'button button--hide'} onClick={this.onHideFiltersClick}>hide</button>\r\n                    </>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;","import React from \"react\";\r\nimport loading from './../../images/loading.svg'\r\n\r\nconst Loading = () => {\r\n    return <img className={'loading'} alt={'loading...'} src={loading}/>\r\n};\r\n\r\nexport default Loading;","const SET_LOADING = 'SET_LOADING';\r\n\r\nlet initialState = {\r\n    loading: true,\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setLoading = (loading) => ({type: SET_LOADING, loading});\r\n\r\nexport default todoReducer;","import React from 'react';\nimport TodoListHeader from \"./TodoListHeader\";\nimport TodoListTasks from \"./TodoListTasks/TodoListTasks\";\nimport TodoListFooter from \"./TodoListFooter\";\nimport Loading from \"../Common/Loading\";\nimport {connect} from \"react-redux\";\nimport {setLoading} from \"../../redux/todo-reducer\";\n\nclass TodoList extends React.Component {\n    state = {\n        tasks: [],\n        filterValue: 'All',\n    };\n\n    componentDidMount() {\n        this.setState({\n            ...this.state,\n            tasks: JSON.parse(localStorage.getItem('tasks')) || [],\n        });\n        this.toggleLoading();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\n    }\n\n    toggleLoading = () => {\n        setTimeout(() => this.props.setLoading(false), 3000);\n    };\n\n    addTask = (newTitle) => {\n        let task = {\n            title: newTitle,\n            isDone: false,\n            priority: 'low',\n            id: Date.now(),\n            dates: {\n                created: `Created: ${new Date().toLocaleString()}\\n`,\n                updated: 'Updated: -\\n',\n                finished: 'Finished: -',\n            }\n        };\n\n        let newTasks = [...this.state.tasks, task];\n        this.setState({tasks: newTasks});\n    };\n\n    deleteTask = (id) => {\n        let newTasks = this.state.tasks.filter(item => item.id !== id);\n        this.setState({...this.state, tasks: [...newTasks]});\n    };\n\n    changePriority = (id, priority) => {\n        let newTasks = this.state.tasks.map(item => {\n            if (item.id === id) {\n                return {\n                    ...item,\n                    priority,\n                    dates: {\n                        ...item.dates,\n                        updated: `Updated: ${new Date().toLocaleString()}\\n`,\n                    }\n                }\n            }\n            return item;\n        });\n        this.setState({\n            ...this.state,\n            tasks: [...newTasks],\n        });\n    };\n\n    changeFilter = (newFilterValue) => {\n        this.setState({\n            filterValue: newFilterValue,\n        })\n    };\n\n    changeStatus = (task, isDone) => {\n        let newTasks = this.state.tasks.map(item => {\n            if (item !== task) {\n                return item;\n            } else {\n                return {\n                    ...item, isDone,\n                    dates: !isDone ? {\n                        ...item.dates,\n                        finished: `Finished: -`,\n                        updated: `Updated: ${new Date().toLocaleString()}\\n`,\n                    } : {\n                        ...item.dates,\n                        updated: `Updated: ${new Date().toLocaleString()}\\n`,\n                        finished: `Finished: ${new Date().toLocaleString()}`,\n                    }\n                }\n            }\n        });\n        this.setState({\n            tasks: newTasks\n        })\n    };\n\n    setNewText = (e) => {\n        let text = e.currentTarget.value;\n        this.setState({text});\n    };\n\n    render = () => {\n        return this.props.loading\n            ? <Loading/>\n            : <div className=\"todoList\">\n                <TodoListHeader setNewText={this.setNewText} text={this.state.text} addTask={this.addTask}/>\n                <TodoListTasks changePriority={this.changePriority} changeStatus={this.changeStatus}\n                               deleteTask={this.deleteTask}\n                               tasks={this.state.tasks.filter(task => {\n                                   return (this.state.filterValue === \"All\" && true)\n                                       || (this.state.filterValue === \"Completed\" && task.isDone)\n                                       || (this.state.filterValue === \"Active\" && !task.isDone);\n                               })}/>\n                <TodoListFooter changeFilter={this.changeFilter} filterValue={this.state.filterValue}/>\n            </div>\n            ;\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    loading: state.todo.loading,\n});\n\nexport default connect(mapStateToProps, {setLoading})(TodoList);\n\n","import React from 'react';\nimport './styles/styles.scss';\nimport MessageContainer from \"./components/Message/MessageContainer\";\nimport AdvantagesContainer from \"./components/Advantages/AdvantagesContainer\";\nimport Names from \"./components/Names/Names\";\nimport {Route} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport TodoList from \"./components/Tasks/TodoList\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n\n            <Navbar/>\n\n            <Route path={'/monday'} render={() =>\n                <>\n                    <MessageContainer/>\n                    <AdvantagesContainer/>\n                    <Names/>\n                </>\n            }/>\n\n            <Route path={'/tuesday'} render={() =>\n                <>\n                    <TodoList/>\n                </>\n            }/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let initialState = {\r\n    fullName: 'Nikita Denisov',\r\n    messageText: 'Hi, myyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy name is Nikita, and i\\'d like to show some presentation about me. There is some of my advantages, check it out!',\r\n    messageTime: '23:04',\r\n    advantages: [\r\n        {advantage: 'I', className: 'advantages__item', id: 1},\r\n        {advantage: 'don\\'t', className: 'advantages__item advantages__item--super', id: 2},\r\n        {advantage: 'know', className: 'advantages__item', id: 3},\r\n        {advantage: 'I\\'m', className: 'advantages__item', id: 4},\r\n        {advantage: 'too', className: 'advantages__item', id: 5},\r\n        {advantage: 'shy', className: 'advantages__item', id: 6},\r\n    ]\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default userReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport userReducer from \"./user-reducer\";\r\nimport todoReducer from \"./todo-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    todo: todoReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}